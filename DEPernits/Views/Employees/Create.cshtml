@model DEPernits.DEmployee

@{
    ViewBag.Title = "Create";
}

<h2>Create Employee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Employee Info</legend>

        @*<div class="editor-label">
                @Html.LabelFor(model => model.EmplID)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EmplID)
                @Html.ValidationMessageFor(model => model.EmplID)
            </div>*@



        <div class="form-group">
            <div class="col-sm-3">@Html.LabelFor(model => model.BUSNum)</div>

            <div class="editor-field col-sm-8">
                @*@Html.EditorFor(model => model.BUSNum)*@
                @Html.TextBoxFor(model => model.BUSNum, new { @Value = ViewBag.BUSNum, @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BUSNum)
            </div>

        </div>


        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>


        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.EmplAddress, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.EmplAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmplAddress)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.EmplCity, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.EmplCity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmplCity)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.EmplState, "State", new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.DropDownList("EmplState", String.Empty)
                @Html.ValidationMessageFor(model => model.EmplState)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.EmplZipCode, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.EmplZipCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmplZipCode)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.DEP_DL, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.DEP_DL, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DEP_DL)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.DEP_DLSTATE, "D.Licence State", new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @*@Html.DropDownListFor(x => x.DEP_DLSTATE, (IEnumerable<SelectListItem>)ViewBag.DEP_DLSTATE, new { @class = "form-control" })*@
                @Html.DropDownList("DEP_DLSTATE", String.Empty)
                @Html.ValidationMessageFor(model => model.DEP_DLSTATE)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.email, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.email)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.phone, new { @class = "control-label" })
            </div>
            <div class="editor-field col-sm-8">
                @Html.TextBoxFor(model => model.phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.phone)
            </div>
        </div>

        @*<div class="editor-label">
                @Html.LabelFor(model => model.sys_created_date)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.sys_created_date)
                @Html.ValidationMessageFor(model => model.sys_created_date)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.sys_created_user)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.sys_created_user)
                @Html.ValidationMessageFor(model => model.sys_created_user)
            </div>*@

        <p>
            <input type="submit" value="Create" class="btn btn-success" />
        </p>
    </fieldset>
}

<div>

    <ul class="breadcrumb">
        <li>@Html.ActionLink("Back to Previous Page", null, null, null, new { href = Request.UrlReferrer })</li>
        <li>@Html.ActionLink("Register New Cars", "Create", "Cars")</li>
        <li>@Html.ActionLink("Back to List", "Index")</li>
    </ul>

    @*@Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })*@
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")



    <script>
    if ('@TempData["Success"]' == true) {
        alert("Form successfully submitted");
        // handle refreshing the view, or redirect to another View (window.location.href = "")
    }


    //goes to html part of the view
    @*@using (Ajax.BeginForm("YourActionName", "YourControllerName", new AjaxOptions { HttpMethod = "POST", OnSuccess = "submitSuccess" }))
            @using (Ajax.BeginForm("Create", "Employees", new AjaxOptions { HttpMethod = "POST", OnSuccess = "submitSuccess" }))
        {
        // your form controls go here
        }*@

    function submitSuccess() {
        alert("Form submitted successfully.");
    }
    </script>
}
