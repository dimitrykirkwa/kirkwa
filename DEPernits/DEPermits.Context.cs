//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DEPernits
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DowntownEmployeeParkingEntities : DbContext
    {
        public DowntownEmployeeParkingEntities()
            : base("name=DowntownEmployeeParkingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Color> Colors { get; set; }
        public DbSet<Make> Makes { get; set; }
        public DbSet<Model> Models { get; set; }
        public DbSet<State> States { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<DECar> DECars { get; set; }
        public DbSet<DEPermits_History> DEPermits_History { get; set; }
        public DbSet<DEmployee> DEmployees { get; set; }
        public DbSet<vw_DECarsOwnersInfo> vw_DECarsOwnersInfo { get; set; }
        public DbSet<vw_DEPermitsDenormalized> vw_DEPermitsDenormalized { get; set; }
        public DbSet<vw_DowntownActiveBusinessLicenses> vw_DowntownActiveBusinessLicenses { get; set; }
        public DbSet<vw_TotalCarPerBus> vw_TotalCarPerBus { get; set; }
        public DbSet<vw_ui_dashboard1> vw_ui_dashboard1 { get; set; }
        public DbSet<vw_ui_dashboard2> vw_ui_dashboard2 { get; set; }
    
        public virtual int usp_DECars_inserting(string ownerId, string makeID, string modelID, string carYear, string color, string plate, string plateState)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var makeIDParameter = makeID != null ?
                new ObjectParameter("MakeID", makeID) :
                new ObjectParameter("MakeID", typeof(string));
    
            var modelIDParameter = modelID != null ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(string));
    
            var carYearParameter = carYear != null ?
                new ObjectParameter("CarYear", carYear) :
                new ObjectParameter("CarYear", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var plateParameter = plate != null ?
                new ObjectParameter("Plate", plate) :
                new ObjectParameter("Plate", typeof(string));
    
            var plateStateParameter = plateState != null ?
                new ObjectParameter("PlateState", plateState) :
                new ObjectParameter("PlateState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DECars_inserting", ownerIdParameter, makeIDParameter, modelIDParameter, carYearParameter, colorParameter, plateParameter, plateStateParameter);
        }
    
        public virtual int usp_DEPermits_History_insert(string dEPermitNumberV, string dEPermitNumberI, string egovID, string bUSNum, Nullable<int> employersContactsID, Nullable<int> dECarID, Nullable<int> statusID, Nullable<System.DateTime> dEP_APPDATE, Nullable<System.DateTime> dEP_RENEWDATE, string notes, string custom1, string custom2, Nullable<int> custom3)
        {
            var dEPermitNumberVParameter = dEPermitNumberV != null ?
                new ObjectParameter("DEPermitNumberV", dEPermitNumberV) :
                new ObjectParameter("DEPermitNumberV", typeof(string));
    
            var dEPermitNumberIParameter = dEPermitNumberI != null ?
                new ObjectParameter("DEPermitNumberI", dEPermitNumberI) :
                new ObjectParameter("DEPermitNumberI", typeof(string));
    
            var egovIDParameter = egovID != null ?
                new ObjectParameter("EgovID", egovID) :
                new ObjectParameter("EgovID", typeof(string));
    
            var bUSNumParameter = bUSNum != null ?
                new ObjectParameter("BUSNum", bUSNum) :
                new ObjectParameter("BUSNum", typeof(string));
    
            var employersContactsIDParameter = employersContactsID.HasValue ?
                new ObjectParameter("EmployersContactsID", employersContactsID) :
                new ObjectParameter("EmployersContactsID", typeof(int));
    
            var dECarIDParameter = dECarID.HasValue ?
                new ObjectParameter("DECarID", dECarID) :
                new ObjectParameter("DECarID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var dEP_APPDATEParameter = dEP_APPDATE.HasValue ?
                new ObjectParameter("DEP_APPDATE", dEP_APPDATE) :
                new ObjectParameter("DEP_APPDATE", typeof(System.DateTime));
    
            var dEP_RENEWDATEParameter = dEP_RENEWDATE.HasValue ?
                new ObjectParameter("DEP_RENEWDATE", dEP_RENEWDATE) :
                new ObjectParameter("DEP_RENEWDATE", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var custom1Parameter = custom1 != null ?
                new ObjectParameter("Custom1", custom1) :
                new ObjectParameter("Custom1", typeof(string));
    
            var custom2Parameter = custom2 != null ?
                new ObjectParameter("Custom2", custom2) :
                new ObjectParameter("Custom2", typeof(string));
    
            var custom3Parameter = custom3.HasValue ?
                new ObjectParameter("Custom3", custom3) :
                new ObjectParameter("Custom3", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DEPermits_History_insert", dEPermitNumberVParameter, dEPermitNumberIParameter, egovIDParameter, bUSNumParameter, employersContactsIDParameter, dECarIDParameter, statusIDParameter, dEP_APPDATEParameter, dEP_RENEWDATEParameter, notesParameter, custom1Parameter, custom2Parameter, custom3Parameter);
        }
    
        public virtual int usp_Employee_inserting(string name, string emplAddress, string emplState, string emplZipCode, string dEP_DL, string dEP_DLSTATE, string email, string phone)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emplAddressParameter = emplAddress != null ?
                new ObjectParameter("EmplAddress", emplAddress) :
                new ObjectParameter("EmplAddress", typeof(string));
    
            var emplStateParameter = emplState != null ?
                new ObjectParameter("EmplState", emplState) :
                new ObjectParameter("EmplState", typeof(string));
    
            var emplZipCodeParameter = emplZipCode != null ?
                new ObjectParameter("EmplZipCode", emplZipCode) :
                new ObjectParameter("EmplZipCode", typeof(string));
    
            var dEP_DLParameter = dEP_DL != null ?
                new ObjectParameter("DEP_DL", dEP_DL) :
                new ObjectParameter("DEP_DL", typeof(string));
    
            var dEP_DLSTATEParameter = dEP_DLSTATE != null ?
                new ObjectParameter("DEP_DLSTATE", dEP_DLSTATE) :
                new ObjectParameter("DEP_DLSTATE", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_inserting", nameParameter, emplAddressParameter, emplStateParameter, emplZipCodeParameter, dEP_DLParameter, dEP_DLSTATEParameter, emailParameter, phoneParameter);
        }
    }
}
